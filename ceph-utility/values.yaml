# Copyright 2017 The Openstack-Helm Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default values for ceph-client.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

deployment:
  ceph: true

release_group: null

images:
  pull_policy: IfNotPresent
  tags:
    ceph_utility: 'docker.io/sreejithpunnapuzha/ceph-utility:v0.0.3'
    image_repo_sync: docker.io/docker:17.07.0
  local_registry:
    active: false
    exclude:
      - dep_check
      - image_repo_sync

labels:
  utility:
    node_selector_key: openstack-helm-node-class
    node_selector_value: primary

network_policy:
  ceph:
    podSelector:
      matchLabels:
        component: utility
    policyTypes:
    - Egress
    - Ingress
    egress:
    - ports:
      - {}
    - to:
      - namespaceSelector:
          matchLabels:
            name: kube-system
        podSelector:
          matchLabels:
            application: kubernetes
            component: dns


pod:
  dns_policy: "ClusterFirstWithHostNet"
  replicas:
    utility: 1
  affinity:
    anti:
      type:
        default: preferredDuringSchedulingIgnoredDuringExecution
      topologyKey:
        default: kubernetes.io/hostname
  resources:
    enabled: false
    utility:
      requests:
        memory: "100Mi"
        cpu: "250m"
      limits:
        memory: "250Mi"
        cpu: "500m"
    jobs:
      bootstrap:
        limits:
          memory: "1024Mi"
          cpu: "2000m"
        requests:
          memory: "128Mi"
          cpu: "500m"
      image_repo_sync:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1024Mi"
          cpu: "2000m"

secrets:
  keyrings:
    admin: pvc-ceph-client-key

conf:
  features:
    utility: true
  cephconf:
    etc: ceph-etc
  cephfilter:
    Filters:
      #RADOS Commands 
      #POOL Commands
      rados01: RegExpFilter, rados, root, rados, \b(?=lspools|df|ls|help)\b\S+
      rados02: RegExpFilter, rados, root, rados, --pool, .*, ls
#      rados02: RegExpFilter, rados, root, rados, ls, ([^,]*)(, ?([^,]*))* # ^([a-zA-Z0-9]+,?\s*)+$
      rados03: RegExpFilter, rados, root, rados, --help
      #RADOS POOL SNAP
      rados05: RegExpFilter, rados, root, rados, \b(?=lssnap|mksnap)\b\S+
      rados06: RegExpFilter, rados, root, rados, --pool, .*, lssnap
      rados07: RegExpFilter, rados, root, rados, --pool, .*, mksnap, .*
      #OBJECT COMMANDS
      rados10: RegExpFilter, rados, root, rados, \b(?=get|listxattr|getxattr|stat|stat2|listomapkeys|listomapvals|getomapval|listwatchers|getomapheader)\b\S+
      rados11: RegExpFilter, rados, root, rados, --pool, .*, get, .* # rados --pool get object2
      rados12: RegExpFilter, rados, root, rados, --pool, .*, listxattr, .*  #rados --pool rbd listattr FOO
      rados13: RegExpFilter, rados, root, rados, --pool, .*, getxattr, .*, .*  #rados --pool rbd getxattr obj attr
      rados14: RegExpFilter, rados, root, rados, --pool, .*, stat, .* # rados --pool rbd stat object2
      rados15: RegExpFilter, rados, root, rados, --pool, .*, stat2, .* # rados --pool rbd stat2 object2
      rados16: RegExpFilter, rados, root, rados, --pool, .*, listomapkeys, .* # rados --pool rbd listomapkeys object2
      rados17: RegExpFilter, rados, root, rados, --pool, .*, listomapvals, .* # rados --pool rbd listomapvals object2
      rados18: RegExpFilter, rados, root, rados, --pool, .*, getomapval, .*, .* # rados --pool rbd getomapval testfile key
      rados19: RegExpFilter, rados, root, rados, --pool, .*, listwatchers, .* # rados -p rbd listwatchers boot.rbd
      rados20: RegExpFilter, rados, root, rados, --pool, .*, getomapheader, .* # rados -p rbd getomapheader name
      #SCRUB AND REPAIR:
      rados21: RegExpFilter, rados, root, rados, \b(?=list-inconsistent-pg|list-inconsistent-obj|list-inconsistent-snapset)\b\S+
      rados22: RegExpFilter, rados, root, rados, list-inconsistent-pg, .*, --format=json-pretty # rados list-inconsistent-pg <pool> --format=json-pretty
      rados23: RegExpFilter, rados, root, rados, list-inconsistent-obj, .* #rados list-inconsistent-obj <placement-group-id>
      rados24: RegExpFilter, rados, root, rados, list-inconsistent-snapset, .*, --format=json-pretty #rados list-inconsistent-snapset <placement-group-id> --format=json-pretty
      #BENCH,CLONE,CLEANUP
      rados25: RegExpFilter, rados, root, rados, \b(?=clonedata|bench|cleanup)\b\S+
      rados26: RegExpFilter, rados, root, rados, --pool, .*, clonedata, .*, .*, â€“object-locator, .* #rados -p data clonedata foo.tmp foo --object-locator foo 
      rados27: RegExpFilter, rados, root, rados, --pool, .*, bench, .*, \b(?=write|seq|rand)\b\S+, -b, .*, -t, .*, --run-name, .* #rados --pool rbd bench 10 write -b 4000 -t 8 --run-name test
      rados28: RegExpFilter, rados, root, rados, --pool, .*, cleanup #rados --pool rbd cleanup
  cephrootwrap:
    DEFAULT:
      # Configuration for ceph-rootwrap
      # This file should be owned by (and only-writeable by) the root user
      # List of directories to load filter definitions from (separated by ',').
      # These directories MUST all be only writeable by root !
      filters_path: /etc/ceph/rootwrap.d
      # List of directories to search executables in, in case filters do not
      # explicitely specify a full path (separated by ',')
      # If not specified, defaults to system PATH environment variable.
      # These directories MUST all be only writeable by root !
      exec_dirs: /sbin,/usr/sbin,/bin,/usr/bin,/usr/local/bin,/usr/local/sbin,/tmp
      # Enable logging to syslog
      # Default value is False
      use_syslog: True
      # Which syslog facility to use.
      # Valid values include auth, authpriv, syslog, local0, local1...
      # Default value is 'syslog'
      syslog_log_facility: syslog
      # Which messages to log.
      # INFO means log all usage
      # ERROR means only log unsuccessful attempts
      syslog_log_level: INFO
  storage:
    utility:
      backup_target: /var/lib/openstack-helm/ceph/backup

dependencies:
  dynamic:
    common:
      local_image_registry:
        jobs:
          - ceph-utility-image-repo-sync
        services:
          - endpoint: node
            service: local_image_registry
  static:
    bootstrap:
      jobs: null
    cephfs_client_key_generator:
      jobs: null
    namespace_client_key_cleaner:
      jobs: null
    namespace_client_key_generator:
      jobs: null
    image_repo_sync:
      services:
        - endpoint: internal
          service: local_image_registry

bootstrap:
  enabled: true

endpoints:
  cluster_domain_suffix: cluster.local
  local_image_registry:
    name: docker-registry
    namespace: docker-registry
    hosts:
      default: localhost
      internal: docker-registry
      node: localhost
    host_fqdn_override:
      default: null
    port:
      registry:
        node: 5000

monitoring:
  prometheus:
    enabled: true

manifests:
  configmap_bin: true
  configmap_etc_client: true
  configmap_etc_sudoers: true
  deployment_utility: true
  network_policy: false
